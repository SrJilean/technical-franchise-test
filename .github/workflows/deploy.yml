name: Deploy to AWS ECS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Make mvnw executable
        run: chmod +x mvnw

      - name: Build app
        run: ./mvnw -DskipTests package

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-1 \
          | docker login --username AWS --password-stdin 429788298926.dkr.ecr.us-east-1.amazonaws.com

      - name: Build Docker image
        run: docker build -t franchises-dev .

      - name: Tag Docker image
        run: docker tag franchises-dev:latest 429788298926.dkr.ecr.us-east-1.amazonaws.com/franchises-dev:latest

      - name: Push Docker image
        run: docker push 429788298926.dkr.ecr.us-east-1.amazonaws.com/franchises-dev:latest

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.5

      - name: Deploy with Terraform
        working-directory: ./infra
        run: |
          terraform init -input=false
          terraform apply -auto-approve \
            -var="db_url=${{ secrets.DB_URL }}" \
            -var="db_username=${{ secrets.DB_USERNAME }}" \
            -var="db_password=${{ secrets.DB_PASSWORD }}"

      - name: Force new ECS deployment
        run: |
          echo "Forzando nuevo deploy en ECS..."
          aws ecs update-service \
            --cluster franchises-cluster-dev \
            --service franchises-svc-dev \
            --force-new-deployment
